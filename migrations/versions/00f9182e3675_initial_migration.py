"""Initial migration

Revision ID: 00f9182e3675
Revises: 
Create Date: 2025-09-02 09:50:31.149371

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '00f9182e3675'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('critter_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('critter_id', sa.Integer(), nullable=False),
    sa.Column('tick', sa.Integer(), nullable=False),
    sa.Column('event', sa.Enum('BIRTH', 'DEATH', 'BREED', 'ATTACK_ESCAPED', 'ATTACK_SURVIVED', 'ATTACK_KILLED', name='event'), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('critter_event', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_critter_event_critter_id'), ['critter_id'], unique=False)

    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_player_username'), ['username'], unique=True)

    op.create_table('simulation_stats',
    sa.Column('tick', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('herbivore_population', sa.Integer(), nullable=True),
    sa.Column('carnivore_population', sa.Integer(), nullable=True),
    sa.Column('herbivore_age_distribution', sa.Text(), nullable=True),
    sa.Column('carnivore_age_distribution', sa.Text(), nullable=True),
    sa.Column('herbivore_health_distribution', sa.Text(), nullable=True),
    sa.Column('carnivore_health_distribution', sa.Text(), nullable=True),
    sa.Column('herbivore_hunger_distribution', sa.Text(), nullable=True),
    sa.Column('carnivore_hunger_distribution', sa.Text(), nullable=True),
    sa.Column('herbivore_thirst_distribution', sa.Text(), nullable=True),
    sa.Column('carnivore_thirst_distribution', sa.Text(), nullable=True),
    sa.Column('herbivore_energy_distribution', sa.Text(), nullable=True),
    sa.Column('carnivore_energy_distribution', sa.Text(), nullable=True),
    sa.Column('herbivore_speed_q1', sa.Float(), nullable=True),
    sa.Column('herbivore_speed_median', sa.Float(), nullable=True),
    sa.Column('herbivore_speed_q3', sa.Float(), nullable=True),
    sa.Column('carnivore_speed_q1', sa.Float(), nullable=True),
    sa.Column('carnivore_speed_median', sa.Float(), nullable=True),
    sa.Column('carnivore_speed_q3', sa.Float(), nullable=True),
    sa.Column('herbivore_size_q1', sa.Float(), nullable=True),
    sa.Column('herbivore_size_median', sa.Float(), nullable=True),
    sa.Column('herbivore_size_q3', sa.Float(), nullable=True),
    sa.Column('carnivore_size_q1', sa.Float(), nullable=True),
    sa.Column('carnivore_size_median', sa.Float(), nullable=True),
    sa.Column('carnivore_size_q3', sa.Float(), nullable=True),
    sa.Column('herbivore_metabolism_q1', sa.Float(), nullable=True),
    sa.Column('herbivore_metabolism_median', sa.Float(), nullable=True),
    sa.Column('herbivore_metabolism_q3', sa.Float(), nullable=True),
    sa.Column('carnivore_metabolism_q1', sa.Float(), nullable=True),
    sa.Column('carnivore_metabolism_median', sa.Float(), nullable=True),
    sa.Column('carnivore_metabolism_q3', sa.Float(), nullable=True),
    sa.Column('herbivore_perception_q1', sa.Float(), nullable=True),
    sa.Column('herbivore_perception_median', sa.Float(), nullable=True),
    sa.Column('herbivore_perception_q3', sa.Float(), nullable=True),
    sa.Column('carnivore_perception_q1', sa.Float(), nullable=True),
    sa.Column('carnivore_perception_median', sa.Float(), nullable=True),
    sa.Column('carnivore_perception_q3', sa.Float(), nullable=True),
    sa.Column('herbivore_commitment_q1', sa.Float(), nullable=True),
    sa.Column('herbivore_commitment_median', sa.Float(), nullable=True),
    sa.Column('herbivore_commitment_q3', sa.Float(), nullable=True),
    sa.Column('carnivore_commitment_q1', sa.Float(), nullable=True),
    sa.Column('carnivore_commitment_median', sa.Float(), nullable=True),
    sa.Column('carnivore_commitment_q3', sa.Float(), nullable=True),
    sa.Column('goal_distribution', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('tick')
    )
    op.create_table('tile_state',
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.Column('food_available', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('x', 'y')
    )
    op.create_table('training_stats',
    sa.Column('tick', sa.Integer(), nullable=False),
    sa.Column('herbivore_epsilon', sa.Float(), nullable=True),
    sa.Column('carnivore_epsilon', sa.Float(), nullable=True),
    sa.Column('avg_reward_herbivore', sa.Float(), nullable=True),
    sa.Column('avg_reward_carnivore', sa.Float(), nullable=True),
    sa.Column('avg_concordance_herbivore', sa.Float(), nullable=True),
    sa.Column('avg_concordance_carnivore', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('tick')
    )
    op.create_table('critter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('diet', sa.Enum('HERBIVORE', 'CARNIVORE', name='diettype'), server_default='herbivore', nullable=False),
    sa.Column('health', sa.Float(), nullable=True),
    sa.Column('energy', sa.Float(), nullable=True),
    sa.Column('hunger', sa.Float(), nullable=True),
    sa.Column('thirst', sa.Float(), nullable=True),
    sa.Column('age', sa.Integer(), server_default='0', nullable=False),
    sa.Column('speed', sa.Float(), server_default='5.0', nullable=False),
    sa.Column('size', sa.Float(), server_default='5.0', nullable=False),
    sa.Column('metabolism', sa.Float(), server_default='1.0', nullable=False),
    sa.Column('perception', sa.Float(), server_default='8.0', nullable=False),
    sa.Column('lifespan', sa.Integer(), server_default='2000', nullable=False),
    sa.Column('commitment', sa.Float(), server_default='1.75', nullable=False),
    sa.Column('x', sa.Integer(), nullable=True),
    sa.Column('y', sa.Integer(), nullable=True),
    sa.Column('vx', sa.Float(), nullable=True),
    sa.Column('vy', sa.Float(), nullable=True),
    sa.Column('movement_progress', sa.Float(), server_default='0.0', nullable=False),
    sa.Column('breeding_cooldown', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('parent_one_id', sa.Integer(), nullable=False),
    sa.Column('parent_two_id', sa.Integer(), nullable=False),
    sa.Column('ai_state', sa.Enum('IDLE', 'FLEEING', 'RESTING', 'SEEKING_FOOD', 'EATING', 'SEEKING_WATER', 'DRINKING', 'SEEKING_MATE', 'BREEDING', name='aistate'), server_default='idle', nullable=False),
    sa.Column('last_action', sa.Enum('REST', 'DRINK', 'EAT', 'ATTACK', 'AMBUSH', 'BREED', 'MOVE', 'IDLE', name='actiontype'), nullable=True),
    sa.ForeignKeyConstraint(['parent_one_id'], ['critter.id'], ),
    sa.ForeignKeyConstraint(['parent_two_id'], ['critter.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dead_critter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('cause', sa.Enum('STARVATION', 'THIRST', 'OLD_AGE', 'PREDATION', 'EXHAUSTION', name='causeofdeath'), nullable=True),
    sa.Column('diet', sa.Enum('HERBIVORE', 'CARNIVORE', name='diettype'), server_default='herbivore', nullable=False),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('size', sa.Float(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('parent_one_id', sa.Integer(), nullable=True),
    sa.Column('parent_two_id', sa.Integer(), nullable=True),
    sa.Column('time_of_death', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('dead_critter', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_dead_critter_original_id'), ['original_id'], unique=True)

    op.create_table('dead_critter_children_association',
    sa.Column('dead_critter_id', sa.Integer(), nullable=False),
    sa.Column('child_critter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_critter_id'], ['critter.id'], ),
    sa.ForeignKeyConstraint(['dead_critter_id'], ['dead_critter.id'], ),
    sa.PrimaryKeyConstraint('dead_critter_id', 'child_critter_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dead_critter_children_association')
    with op.batch_alter_table('dead_critter', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dead_critter_original_id'))

    op.drop_table('dead_critter')
    op.drop_table('critter')
    op.drop_table('training_stats')
    op.drop_table('tile_state')
    op.drop_table('simulation_stats')
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_player_username'))

    op.drop_table('player')
    with op.batch_alter_table('critter_event', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_critter_event_critter_id'))

    op.drop_table('critter_event')
    # ### end Alembic commands ###
